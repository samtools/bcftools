include::header.inc[]


Frequently Asked Questions
--------------------------

.*Incorrect number of fields at chr1:1234567*

[#incorrect-nfields]
This error is triggered when the number of values in the data line does not match
its definition in the header. For example, one may see an error like
----
[W::bcf_calc_ac] Incorrect number of AC fields at Chrxx:xxxxx. (This message is printed only once.)
----
In this example, the VCF specification defines the tag AC as `Number=A`
----
##INFO=<ID=AC,Number=A,Type=Integer,Description="Allele count in genotypes">
----
and expects a value for each ALT allele, for example
----
chr1  64334  .  A  C,T  .  .  AC=1,1  GT  0/1  0/1
----
The error above is printed when different number of values is encountered, for example `AC=1` or `AC=1,1,1` in the example above.

Other such definitions are `Number=R` (there must be as many values as there are REF+ALT alleles in total),
and `Number=G` (this is more complicated, see the section 1.4.2 of the link:http://samtools.github.io/hts-specs/VCFv4.3.pdf[VCF specification]).

_How to verify:_ +
Look up the tag definition in the header (`bcftools view -h file.vcf.gz | grep TAG`) to check the expected number
of values and then check the number of alleles and values in the data line (`bcftools view -H file.vcf.gz -r chr1:1234567`).
Note that the program only works with ploidy 1 or 2, so if defined as `Number=G` and the ploidy is bigger,
the program is not ready for cases like that.

_How to fix:_ +
If the tag is not important for your analysis, a quick and dirty workaround is to remove the
tag from the VCF completely
----
bcftools annotate -x TAG
----
If the tag must remain in the VCF, change the definition of the tag in the header to `Number=.`
----
bcftools view -h old.vcf > hdr.txt
# edit hdr.txt and change the tag definition to Number=.
bcftools reheader -h hdr.txt old.vcf > new.vcf
----



.*The -R option pulls in sites from outside of the regions file*
[#region-subset]
As described in the link:../bcftools.html#common_options[manual page], the `-R` option takes into account overlapping records.
If a strict subset by position is required, add (or replace with) the `-T` option.



.*Filtering expressions seem to work differently for `view` and `query`. What is going on?*
[#query-vs-view-filtering]
Say you want to print a list of samples with non-reference genotypes. This can be done using the following command
----
$ bcftools query -f'[%CHROM:%POS %SAMPLE %GT\n]' -i 'GT="alt"' file.vcf
1:67893 sample3 0/1
----
However, you may also want to print genotypes of ALL samples at variant sites with at least one
non-reference genotype. In order for this to work, first select the desired rows
with the `view` command, then let `query` format the output
----
$ bcftools view -i 'GT="alt"' file.vcf -Ou | bcftools query -f'[%CHROM:%POS %SAMPLE %GT\n]'
1:67893 sample1 0/0
1:67893 sample2 0/0
1:67893 sample3 0/1
----


.*How to cite BCFtools?*
Please see link:publications.html[here].


include::footer.inc[]


